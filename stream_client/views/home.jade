html
	head
		title= title
		script(src="./javascripts/webrtc.io.js")
body
		h1= title
		video(id="remote", autoplay="autoplay")
		script.
			rtc.connect('ws://localhost:7000/');

			rtc.on('message', function(stream){
				console.log(stream)
				rtc.attachStream(stream, 'remote');
			});

			console.log("Begin Socket.io")

			var connection = new RTCMultiConnection(params.sessionid);

			connection.bandwidth = {};

			connection.openSignalingChannel = openSignalingChannel;

			var participants = document.getElementById('participants');
            
			connection.onstream = function (e) {
				participants.insertBefore(e.mediaElement, participants.firstChild);
			};

			var sessionDescription = {
				userid: params.userid,
				extra: {},
				session: {
					video: true,
					oneway: true
				},
				sessionid: params.sessionid
			};

			if (params.userid && params.sessionid) {
				connection.join(sessionDescription);
			}

			function openSignalingChannel(config) {
				config.channel = config.channel || this.channel;
				var websocket = new WebSocket('wss://wsnodejs.nodejitsu.com:443');
				websocket.onopen = function () {
					websocket.push(JSON.stringify({
						open: true,
						channel: config.channel
					}));
					if (config.callback) config.callback(websocket);
				};
				websocket.onerror = function() {
					alert('Unable to connect to wss://www.webrtc-experiment.com:8563');
				};
				websocket.onmessage = function (event) {
					config.onmessage(JSON.parse(event.data));
				};
				websocket.push = websocket.send;
				websocket.send = function (data) {
					websocket.push(JSON.stringify({
						data: data,
						channel: config.channel
					}));
				};
			}
